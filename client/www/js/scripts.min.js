
(function() {
  'use strict'

  var dependencies = [
    'ionic',
    'ui.router'
  ]

  angular.module('panic', dependencies)

  .run(function($ionicPlatform) {
    $ionicPlatform.ready(function() {
      if(window.cordova && window.cordova.plugins.Keyboard) {
        // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
        // for form inputs)

        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);

        // Don't remove this line unless you know what you are doing. It stops the viewport
        // from snapping when text inputs are focused. Ionic handles this internally for
        // a much nicer keyboard experience.
        cordova.plugins.Keyboard.disableScroll(true);
      }
      if(window.StatusBar) {
        StatusBar.styleDefault();
      }
    });
  })

})();

(function() {
  'use strict'

  angular.module('panic')
  .config(setupRoutes)

  setupRoutes.$inject = [
    '$stateProvider',
    '$urlRouterProvider',
    '$locationProvider',
    '$httpProvider',
  ];

  function setupRoutes($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider)  {
    $locationProvider.html5Mode(true);
    $urlRouterProvider.otherwise("/");

    $stateProvider
      .state('landing', {
        url: '/',
        template: "<landing-directive></landing-directive>"
      })
      .state('student', {
        url: '/lecture',
        template: "<lecture-student></lecture-student>"
      })
      .state('teacher', {
        url: '/teacher',
        template: "<lecture-teacher></lecture-teacher>"
      })
      .state('dashboard', {
        url: '/dashboard',
        template: "<dashboard></dashboard>"
      })
      .state('dashboard.classes', {
        url: '/classes',
        templateUrl: "partials/dashboard.classes.html"
      })
      .state('dashboard.lectures', {
        url: '/lectures',
        templateUrl: "partials/dashboard.lectures.html"
      })
  }
})();

(function() {
  'use strict';

    angular.module('panic')
      .directive('landingDirective', landingDirective);

      function landingDirective (){
        return {
          restrict: "E",
          scope: {},
          templateUrl: "partials/landing.html",
          controller: landingController,
          controllerAs: "vm"
        }
      }

      landingController.$inject = [
        '$log',
        '$state'
      ];

      function landingController($log, $state) {
        var vm = this;
        vm.classCodeSubmit = classCodeSubmit;

        function classCodeSubmit (form) {
          //do stuff with the class code
          console.log('class code', vm.classCode);
          //why is this undefined?!
          $state.go('student');
        }
      }

}());

(function() {
  'use strict';

    angular.module('panic')
      .directive('dashboard', dashboardDirective);

      function dashboardDirective (){
        return {
          restrict: "E",
          scope: {},
          templateUrl: "partials/dashboard.html",
          controller: dashboardController,
          controllerAs: "vm"
        }
      }

      dashboardController.$inject = [
        '$log',
        '$state'
      ];

      function dashboardController($log, $state) {
        var vm = this;

      }

}());

(function() {
  'use strict';

    angular.module('panic')
      .directive('lectureStudent', lectureDirective);

      function lectureDirective (){
        return {
          restrict: "E",
          scope: {},
          templateUrl: "partials/lecture.student.html",
          controller: lectureController,
          controllerAs: "vm"
        }
      }

      lectureController.$inject = [
        '$log',
        '$state'
      ];

      function lectureController($log, $state) {
        var vm = this;

      }

}());

(function() {
  'use strict';

    angular.module('panic')
      .directive('lectureTeacher', lectureTeacherDirective);

      function lectureTeacherDirective () {
        return {
          restrict: "E",
          scope: {},
          templateUrl: "partials/lecture.teacher.html",
          controller: lectureTeacherController,
          controllerAs: "vm"
        }
      }

      lectureTeacherController.$inject = [
        '$log',
        '$state'
      ];

      function lectureTeacherController($log, $state) {
        var vm = this;

      }

}());

(function() {
  'use strict';

  angular.module('panic', ['googlechart'])
  .directive('areaChart', directive)

  function directive () {
    return {
      scope: {},
      template: '<div google-chart chart="areaChart"></div>',
      controller: controller,
    }

    function controller ($scope) {
      var i = 1;
      var D = 0;
      var N = 100;
      var G = 0;
      // $scope.voter = voter;
      $scope.className = 'class'

      // function voter () {
      //   D += 5
      //   G += 10
      //   N -= 15
      //   areaChart.options.title = $scope.className
      //   areaChart.data.rows.push({c: [{v: i + 'min' }, {v: D}, {v: N}, {v: G}] })
      //   $scope.vote[0]= { 'c': [ { 'v': 'dafuq' }, {'v' : D} ] }
      //   $scope.vote[1] = { 'c': [ { 'v': 'novote'}, {'v' : N} ] }
      //   $scope.vote[2] = { 'c': [ { 'v':  'gotit'}, {'v' : G } ] }
      //   i+=10
      // }

      var areaChart = {};
      areaChart.type = "AreaChart";
      areaChart.displayed = false;
      areaChart.data = {};
      areaChart.data.rows = []

      areaChart.data.rows.push({c: [{v: "0min"},{v: 0},{v: 100},{v: 0} ] })

      areaChart.data.cols = [
          {id: "month",label: "Month",type: "string"},
          {id: "DaFuq",label: "DaFuq",type: "number"},
          {id: "NoVote",label: "NoVote",type: "number"},
          {id: "GotIt",label: "GotIt",type: "number"},
        ];
      areaChart.options = {
        "title": $scope.className,
        "isStacked": "true",
        "fill": 20,
        "displayExactValues": true,
        "vAxis": {
          "title": "Percent class",
          "gridlines": {
            "count": 5
          }
        },
        "hAxis": {
          "title": "Time",
          "scaleType": 'log'

        }
      };
      $scope.areaChart = areaChart;

    }
  }


}());

(function() {
  'use strict';

  angular.module('panic')
  .factory('ChartFactory', factory)

  factory.$inject = ['$http', '$rootScope', '$location']

  function factory ($http, $rootScope, $location) {
    console.log('factory4');
    // $rootScope.$on( "$stateChangeStart", function(event, next, current) {
    //     console.log($location);
    //     console.log('here');
    // })

    var service = {

    }
    return service
  }

}());

(function() {
  'use strict';

  angular.module('panic')
  .directive('pieChart', directive)

  function directive () {
    return {
      scope: {},
      template: '<div google-chart chart="pieChart"></div>',
      controller: controller,
    }
    function controller ($scope, ChartFactory) {
      var pieChart = {};
      pieChart.type = 'PieChart';
      pieChart.displayed = false;
      pieChart.data = {}
      $scope.vote = [];
      $scope.vote[0]= { 'c': [ { 'v': 'dafuq' }, {'v' : 0} ] }
      $scope.vote[1] = { 'c': [ { 'v': 'novote'}, {'v' : 100} ] }
      $scope.vote[2] = { 'c': [ { 'v':  'gotit'}, {'v' : 0 } ] }

      pieChart.data.rows = $scope.vote

        pieChart.formatters = {}
        pieChart.options = {
          "isStacked": "true",
          "fill": 20,
          "displayExactValues": true,
          "vAxis": {
            "title": "Sales unit",
            "gridlines": {
              "count": 10
            }
          },
          "hAxis": {
            "title": "Date"
          }
        }

        $scope.pieChart = pieChart;
    }
  }


}());
